{
  "name": "nimbus/cogniteam-text-detection",
  "type": "COMPONENT_TYPE_COMPONENT",
  "className": "Ros2Component",
  "instanceName": "",
  "description": "Component for text detection",
  "version": {
    "major": 1,
    "minor": 0,
    "patch": 0,
    "build": ""
  },
  "start": "START_MODE_AUTO",
  "environment": {
    "name": "",
    "ipAddress": "",
    "state": "ENVIRONMENT_STATE_UNLOADED",
    "message": "",
    "progress": 0,
    "requiredDevices": [],
    "ports": [],
    "hostIpAddress": "",
    "variables": [],
    "dockerInfo": {
      "image": "cognimbus/cogniteam-text-detection:latest",
      "containerId": "",
      "imageSize": 0,
      "commands": [
      "ros2", 
      "launch", 
      "cogniteam-text-detection", 
      "cogniteam-text-detection.launch.py",
      "model:=${model}",
      "width:=${width}",
      "height:=${height}",
      "thr:=${confidence_threshold}",
      "nms:=${non_maximum_threshold}",
      "device:=${device}"
    ],
      "privileged": false,
      "gpu": false,
      "networkHost": false,
      "binds": [],
      "user": "",
      "runtime": ""
    },
    "log": "",
    "convertedCommands": "",
    "onExit": "IGNORE"
  },
  "parameters": {
    "parameters": [
      {
        "name": "model",
        "description": "Path to a binary .pb file contains trained network.",
        "Category": "Static",
        "node": "",
        "stringValue": "src/cogniteam-text-detection/resource/frozen_east_text_detection.pb"
      },
      {
        "name": "width",
        "description": "Preprocess input image by resizing to a specific width. It should be multiple by 32.",
        "Category": "Static",
        "node": "",
        "integerValue": 640
      },
      {
        "name": "height",
        "description": "Preprocess input image by resizing to a specific height. It should be multiple by 32.",
        "Category": "Static",
        "node": "",
        "integerValue": 480
      },
      {
        "name": "confidence_threshold",
        "description": "Confidence threshold.",
        "Category": "Static",
        "node": "",
        "doubleValue": 0.5
      },
      {
        "name": "non_maximum_threshold",
        "description": "Non-maximum suppression threshold.",
        "Category": "Static",
        "node": "",
        "doubleValue": 0.4
      },
      {
        "name": "device",
        "description": "Device to run Deep Learning inference.",
        "Category": "Static",
        "node": "",
        "stringValue":"cpu"
      }
    ]
  },
  "state": "COMPONENT_STATE_UNLOADED",
  "message": "",
  "streams": {
    "inputStreams": [
      {
        "name": "image_raw",
        "type": "",
        "description": "Raw input image",
        "streamMode": "STREAM_MODE_TOPIC",
        "rosTopic": {
          "topic": "/image_raw",
          "type": "Messages.sensor_msgs.Image",
          "qosProfile": ""
        },
        "latched": false,
        "maxRate": 0,
        "expectedRate": 0
      }
    ],
    "outputStreams": [
      {
        "name": "image_bbox",
        "type": "",
        "description": "bbox output image",
        "streamMode": "STREAM_MODE_TOPIC",
        "rosTopic": {
          "topic": "/image_bbox",
          "type": "Messages.sensor_msgs.Image",
          "qosProfile": ""
        },
        "latched": false,
        "maxRate": 0,
        "expectedRate": 0
      },
      {
        "name": "compressed_image_bbox",
        "type": "",
        "description": "Compressed Image with bbox",
        "streamMode": "STREAM_MODE_TOPIC",
        "rosTopic": {
          "topic": "/image_bbox/compressed",
          "type": "Messages.sensor_msgs.CompressedImage",
          "qosProfile": ""
        },
        "latched": false,
        "maxRate": 0,
        "expectedRate": 0
      }
    ]
  },
  "requiredDevices": [],
  "ros": {
    "baseFrame": "base_link",
    "rate": 10,
    "publishTfDevices": true,
    "generatePort": false,
    "rosMasterUri": "",
    "rosIp": "",
    "autoDetectIp": false,
    "ros2DomainId": 0
  },
  "tags": {},
  "category": "Algorithms/Object detection",
  "simulation": false,
  "pluginFile": "",
  "license": "BSD",
  "id": "8c5b79da-b186-4d96-b303-b387d093f5ec"
}